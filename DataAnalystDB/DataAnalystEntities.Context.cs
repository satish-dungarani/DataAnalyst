//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAnalystDB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DataAnalystDBEntities : DbContext
    {
        public DataAnalystDBEntities()
            : base("name=DataAnalystDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CustSuppAssociation> CustSuppAssociation { get; set; }
        public virtual DbSet<ImportData> ImportData { get; set; }
        public virtual DbSet<MastersList> MastersList { get; set; }
        public virtual DbSet<PharmacyMas> PharmacyMas { get; set; }
        public virtual DbSet<ProcessData> ProcessData { get; set; }
        public virtual DbSet<SupplierMas> SupplierMas { get; set; }
        public virtual DbSet<UserMaster> UserMaster { get; set; }
        public virtual DbSet<MasterValue> MasterValue { get; set; }
    
        public virtual ObjectResult<Nullable<bool>> sp_MenuRoleRights_Save(Nullable<int> pRefRoleId, Nullable<int> pRefMenuId, Nullable<bool> pCanInsert, Nullable<bool> pCanUpdate, Nullable<bool> pCanDelete, Nullable<bool> pCanView, Nullable<int> pUser, string pTerminal)
        {
            var pRefRoleIdParameter = pRefRoleId.HasValue ?
                new ObjectParameter("pRefRoleId", pRefRoleId) :
                new ObjectParameter("pRefRoleId", typeof(int));
    
            var pRefMenuIdParameter = pRefMenuId.HasValue ?
                new ObjectParameter("pRefMenuId", pRefMenuId) :
                new ObjectParameter("pRefMenuId", typeof(int));
    
            var pCanInsertParameter = pCanInsert.HasValue ?
                new ObjectParameter("pCanInsert", pCanInsert) :
                new ObjectParameter("pCanInsert", typeof(bool));
    
            var pCanUpdateParameter = pCanUpdate.HasValue ?
                new ObjectParameter("pCanUpdate", pCanUpdate) :
                new ObjectParameter("pCanUpdate", typeof(bool));
    
            var pCanDeleteParameter = pCanDelete.HasValue ?
                new ObjectParameter("pCanDelete", pCanDelete) :
                new ObjectParameter("pCanDelete", typeof(bool));
    
            var pCanViewParameter = pCanView.HasValue ?
                new ObjectParameter("pCanView", pCanView) :
                new ObjectParameter("pCanView", typeof(bool));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_MenuRoleRights_Save", pRefRoleIdParameter, pRefMenuIdParameter, pCanInsertParameter, pCanUpdateParameter, pCanDeleteParameter, pCanViewParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<sp_MenuRoleRights_Select_Result> sp_MenuRoleRights_Select(Nullable<int> pRefRoleId)
        {
            var pRefRoleIdParameter = pRefRoleId.HasValue ?
                new ObjectParameter("pRefRoleId", pRefRoleId) :
                new ObjectParameter("pRefRoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MenuRoleRights_Select_Result>("sp_MenuRoleRights_Select", pRefRoleIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_UserMaster_Delete(Nullable<int> pID)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_UserMaster_Delete", pIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_UserMaster_Save(Nullable<int> pID, string pFirstName, string pLastName, string pGender, Nullable<System.DateTime> pDOB, string pMobileNo, string pContactNo1, string pContactNo2, string pEmailID, Nullable<bool> pIsActive, Nullable<int> pRefRoleID, string pUserName, Nullable<int> pUser, string pTerminal)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            var pFirstNameParameter = pFirstName != null ?
                new ObjectParameter("pFirstName", pFirstName) :
                new ObjectParameter("pFirstName", typeof(string));
    
            var pLastNameParameter = pLastName != null ?
                new ObjectParameter("pLastName", pLastName) :
                new ObjectParameter("pLastName", typeof(string));
    
            var pGenderParameter = pGender != null ?
                new ObjectParameter("pGender", pGender) :
                new ObjectParameter("pGender", typeof(string));
    
            var pDOBParameter = pDOB.HasValue ?
                new ObjectParameter("pDOB", pDOB) :
                new ObjectParameter("pDOB", typeof(System.DateTime));
    
            var pMobileNoParameter = pMobileNo != null ?
                new ObjectParameter("pMobileNo", pMobileNo) :
                new ObjectParameter("pMobileNo", typeof(string));
    
            var pContactNo1Parameter = pContactNo1 != null ?
                new ObjectParameter("pContactNo1", pContactNo1) :
                new ObjectParameter("pContactNo1", typeof(string));
    
            var pContactNo2Parameter = pContactNo2 != null ?
                new ObjectParameter("pContactNo2", pContactNo2) :
                new ObjectParameter("pContactNo2", typeof(string));
    
            var pEmailIDParameter = pEmailID != null ?
                new ObjectParameter("pEmailID", pEmailID) :
                new ObjectParameter("pEmailID", typeof(string));
    
            var pIsActiveParameter = pIsActive.HasValue ?
                new ObjectParameter("pIsActive", pIsActive) :
                new ObjectParameter("pIsActive", typeof(bool));
    
            var pRefRoleIDParameter = pRefRoleID.HasValue ?
                new ObjectParameter("pRefRoleID", pRefRoleID) :
                new ObjectParameter("pRefRoleID", typeof(int));
    
            var pUserNameParameter = pUserName != null ?
                new ObjectParameter("pUserName", pUserName) :
                new ObjectParameter("pUserName", typeof(string));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_UserMaster_Save", pIDParameter, pFirstNameParameter, pLastNameParameter, pGenderParameter, pDOBParameter, pMobileNoParameter, pContactNo1Parameter, pContactNo2Parameter, pEmailIDParameter, pIsActiveParameter, pRefRoleIDParameter, pUserNameParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<sp_UserMaster_Select_Result> sp_UserMaster_Select(Nullable<int> pID)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserMaster_Select_Result>("sp_UserMaster_Select", pIDParameter);
        }
    
        public virtual ObjectResult<sp_UserMaster_SelectWhere_Result> sp_UserMaster_SelectWhere(string dfltWhere)
        {
            var dfltWhereParameter = dfltWhere != null ?
                new ObjectParameter("dfltWhere", dfltWhere) :
                new ObjectParameter("dfltWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserMaster_SelectWhere_Result>("sp_UserMaster_SelectWhere", dfltWhereParameter);
        }
    
        public virtual ObjectResult<sp_MasterList_Select_Result> sp_MasterList_Select(Nullable<int> pId)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MasterList_Select_Result>("sp_MasterList_Select", pIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_MasterValue_Delete(Nullable<int> pID)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_MasterValue_Delete", pIDParameter);
        }
    
        public virtual ObjectResult<sp_MasterValue_Select_Result> sp_MasterValue_Select(Nullable<int> pRefMasterID, Nullable<int> pID)
        {
            var pRefMasterIDParameter = pRefMasterID.HasValue ?
                new ObjectParameter("pRefMasterID", pRefMasterID) :
                new ObjectParameter("pRefMasterID", typeof(int));
    
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MasterValue_Select_Result>("sp_MasterValue_Select", pRefMasterIDParameter, pIDParameter);
        }
    
        public virtual ObjectResult<sp_MasterValue_SelectWhere_Result> sp_MasterValue_SelectWhere(Nullable<int> pRefMasterID, string dfltWhere)
        {
            var pRefMasterIDParameter = pRefMasterID.HasValue ?
                new ObjectParameter("pRefMasterID", pRefMasterID) :
                new ObjectParameter("pRefMasterID", typeof(int));
    
            var dfltWhereParameter = dfltWhere != null ?
                new ObjectParameter("dfltWhere", dfltWhere) :
                new ObjectParameter("dfltWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MasterValue_SelectWhere_Result>("sp_MasterValue_SelectWhere", pRefMasterIDParameter, dfltWhereParameter);
        }
    
        public virtual ObjectResult<sp_RetrieveMenuRightsWise_Select_Result> sp_RetrieveMenuRightsWise_Select(string pUserName)
        {
            var pUserNameParameter = pUserName != null ?
                new ObjectParameter("pUserName", pUserName) :
                new ObjectParameter("pUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetrieveMenuRightsWise_Select_Result>("sp_RetrieveMenuRightsWise_Select", pUserNameParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_MasterValue_Save(Nullable<int> pRefMasterID, Nullable<int> pID, string pValueName, string pShortName, Nullable<decimal> pOrdNo, Nullable<bool> pIsActive, Nullable<int> pUser, string pTerminal)
        {
            var pRefMasterIDParameter = pRefMasterID.HasValue ?
                new ObjectParameter("pRefMasterID", pRefMasterID) :
                new ObjectParameter("pRefMasterID", typeof(int));
    
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            var pValueNameParameter = pValueName != null ?
                new ObjectParameter("pValueName", pValueName) :
                new ObjectParameter("pValueName", typeof(string));
    
            var pShortNameParameter = pShortName != null ?
                new ObjectParameter("pShortName", pShortName) :
                new ObjectParameter("pShortName", typeof(string));
    
            var pOrdNoParameter = pOrdNo.HasValue ?
                new ObjectParameter("pOrdNo", pOrdNo) :
                new ObjectParameter("pOrdNo", typeof(decimal));
    
            var pIsActiveParameter = pIsActive.HasValue ?
                new ObjectParameter("pIsActive", pIsActive) :
                new ObjectParameter("pIsActive", typeof(bool));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_MasterValue_Save", pRefMasterIDParameter, pIDParameter, pValueNameParameter, pShortNameParameter, pOrdNoParameter, pIsActiveParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_UserMaster_SetUserRole(Nullable<int> pID, Nullable<int> pRefRoleID, string pUserName, Nullable<int> pUpdUser, string pUpdTerminal)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            var pRefRoleIDParameter = pRefRoleID.HasValue ?
                new ObjectParameter("pRefRoleID", pRefRoleID) :
                new ObjectParameter("pRefRoleID", typeof(int));
    
            var pUserNameParameter = pUserName != null ?
                new ObjectParameter("pUserName", pUserName) :
                new ObjectParameter("pUserName", typeof(string));
    
            var pUpdUserParameter = pUpdUser.HasValue ?
                new ObjectParameter("pUpdUser", pUpdUser) :
                new ObjectParameter("pUpdUser", typeof(int));
    
            var pUpdTerminalParameter = pUpdTerminal != null ?
                new ObjectParameter("pUpdTerminal", pUpdTerminal) :
                new ObjectParameter("pUpdTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_UserMaster_SetUserRole", pIDParameter, pRefRoleIDParameter, pUserNameParameter, pUpdUserParameter, pUpdTerminalParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_MenuRoleRights_Delete(Nullable<int> pRefRoleId)
        {
            var pRefRoleIdParameter = pRefRoleId.HasValue ?
                new ObjectParameter("pRefRoleId", pRefRoleId) :
                new ObjectParameter("pRefRoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_MenuRoleRights_Delete", pRefRoleIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_SupplierMaster_Delete(Nullable<int> pSupplierID)
        {
            var pSupplierIDParameter = pSupplierID.HasValue ?
                new ObjectParameter("pSupplierID", pSupplierID) :
                new ObjectParameter("pSupplierID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_SupplierMaster_Delete", pSupplierIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_SupplierMaster_Save(Nullable<int> pSupplierID, string pSupplierName, string pAddress1, string pAddress2, string pCity, string pPostCode, string pRespPerson, string pTelephone, string pFaxNo, string pEmailID, Nullable<bool> pIsActive, Nullable<int> pUser, string pTerminal)
        {
            var pSupplierIDParameter = pSupplierID.HasValue ?
                new ObjectParameter("pSupplierID", pSupplierID) :
                new ObjectParameter("pSupplierID", typeof(int));
    
            var pSupplierNameParameter = pSupplierName != null ?
                new ObjectParameter("pSupplierName", pSupplierName) :
                new ObjectParameter("pSupplierName", typeof(string));
    
            var pAddress1Parameter = pAddress1 != null ?
                new ObjectParameter("pAddress1", pAddress1) :
                new ObjectParameter("pAddress1", typeof(string));
    
            var pAddress2Parameter = pAddress2 != null ?
                new ObjectParameter("pAddress2", pAddress2) :
                new ObjectParameter("pAddress2", typeof(string));
    
            var pCityParameter = pCity != null ?
                new ObjectParameter("pCity", pCity) :
                new ObjectParameter("pCity", typeof(string));
    
            var pPostCodeParameter = pPostCode != null ?
                new ObjectParameter("pPostCode", pPostCode) :
                new ObjectParameter("pPostCode", typeof(string));
    
            var pRespPersonParameter = pRespPerson != null ?
                new ObjectParameter("pRespPerson", pRespPerson) :
                new ObjectParameter("pRespPerson", typeof(string));
    
            var pTelephoneParameter = pTelephone != null ?
                new ObjectParameter("pTelephone", pTelephone) :
                new ObjectParameter("pTelephone", typeof(string));
    
            var pFaxNoParameter = pFaxNo != null ?
                new ObjectParameter("pFaxNo", pFaxNo) :
                new ObjectParameter("pFaxNo", typeof(string));
    
            var pEmailIDParameter = pEmailID != null ?
                new ObjectParameter("pEmailID", pEmailID) :
                new ObjectParameter("pEmailID", typeof(string));
    
            var pIsActiveParameter = pIsActive.HasValue ?
                new ObjectParameter("pIsActive", pIsActive) :
                new ObjectParameter("pIsActive", typeof(bool));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_SupplierMaster_Save", pSupplierIDParameter, pSupplierNameParameter, pAddress1Parameter, pAddress2Parameter, pCityParameter, pPostCodeParameter, pRespPersonParameter, pTelephoneParameter, pFaxNoParameter, pEmailIDParameter, pIsActiveParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<sp_SupplierMaster_Select_Result> sp_SupplierMaster_Select(Nullable<int> pSupplierID)
        {
            var pSupplierIDParameter = pSupplierID.HasValue ?
                new ObjectParameter("pSupplierID", pSupplierID) :
                new ObjectParameter("pSupplierID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SupplierMaster_Select_Result>("sp_SupplierMaster_Select", pSupplierIDParameter);
        }
    
        public virtual ObjectResult<sp_SupplierMaster_SelectWhere_Result> sp_SupplierMaster_SelectWhere(string dfltWhere)
        {
            var dfltWhereParameter = dfltWhere != null ?
                new ObjectParameter("dfltWhere", dfltWhere) :
                new ObjectParameter("dfltWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SupplierMaster_SelectWhere_Result>("sp_SupplierMaster_SelectWhere", dfltWhereParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_PharmacyMaster_Delete(Nullable<int> pPharmacyID)
        {
            var pPharmacyIDParameter = pPharmacyID.HasValue ?
                new ObjectParameter("pPharmacyID", pPharmacyID) :
                new ObjectParameter("pPharmacyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_PharmacyMaster_Delete", pPharmacyIDParameter);
        }
    
        public virtual ObjectResult<sp_PharmacyMaster_Select_Result> sp_PharmacyMaster_Select(Nullable<int> pPharmacyID)
        {
            var pPharmacyIDParameter = pPharmacyID.HasValue ?
                new ObjectParameter("pPharmacyID", pPharmacyID) :
                new ObjectParameter("pPharmacyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PharmacyMaster_Select_Result>("sp_PharmacyMaster_Select", pPharmacyIDParameter);
        }
    
        public virtual ObjectResult<sp_PharmacyMaster_SelectWhere_Result> sp_PharmacyMaster_SelectWhere(string dfltWhere)
        {
            var dfltWhereParameter = dfltWhere != null ?
                new ObjectParameter("dfltWhere", dfltWhere) :
                new ObjectParameter("dfltWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PharmacyMaster_SelectWhere_Result>("sp_PharmacyMaster_SelectWhere", dfltWhereParameter);
        }
    
        public virtual ObjectResult<sp_CustSuppAssociation_Select_Result> sp_CustSuppAssociation_Select(Nullable<int> prefPharmacyID)
        {
            var prefPharmacyIDParameter = prefPharmacyID.HasValue ?
                new ObjectParameter("prefPharmacyID", prefPharmacyID) :
                new ObjectParameter("prefPharmacyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CustSuppAssociation_Select_Result>("sp_CustSuppAssociation_Select", prefPharmacyIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_CustAppAssociation_Save(Nullable<int> pID, Nullable<int> prefPharmacyId, Nullable<int> prefSupplierId, string pAccountNo, Nullable<int> pUser, string pTerminal)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            var prefPharmacyIdParameter = prefPharmacyId.HasValue ?
                new ObjectParameter("prefPharmacyId", prefPharmacyId) :
                new ObjectParameter("prefPharmacyId", typeof(int));
    
            var prefSupplierIdParameter = prefSupplierId.HasValue ?
                new ObjectParameter("prefSupplierId", prefSupplierId) :
                new ObjectParameter("prefSupplierId", typeof(int));
    
            var pAccountNoParameter = pAccountNo != null ?
                new ObjectParameter("pAccountNo", pAccountNo) :
                new ObjectParameter("pAccountNo", typeof(string));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_CustAppAssociation_Save", pIDParameter, prefPharmacyIdParameter, prefSupplierIdParameter, pAccountNoParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_ImportData_Save(string pDataYear, string pDataMonth, string pPharmacyName, string pAccountNo, Nullable<decimal> pGeneric, Nullable<decimal> pEthicalPI, Nullable<decimal> pSurgicalDressing, Nullable<decimal> pNonGeneric, Nullable<decimal> pNonPrescription, Nullable<decimal> pInsulin, Nullable<decimal> pStatus, Nullable<decimal> pElectrical, Nullable<decimal> pDrinks, Nullable<decimal> pNonDiscount, Nullable<decimal> pOTC, Nullable<decimal> pMobility, Nullable<decimal> pSpecials, Nullable<decimal> pNP8, Nullable<decimal> pOther1, Nullable<decimal> pOther2, Nullable<decimal> pOther3, Nullable<decimal> pTotalSpend, Nullable<decimal> pTotalRebate, Nullable<int> pUser, string pTerminal)
        {
            var pDataYearParameter = pDataYear != null ?
                new ObjectParameter("pDataYear", pDataYear) :
                new ObjectParameter("pDataYear", typeof(string));
    
            var pDataMonthParameter = pDataMonth != null ?
                new ObjectParameter("pDataMonth", pDataMonth) :
                new ObjectParameter("pDataMonth", typeof(string));
    
            var pPharmacyNameParameter = pPharmacyName != null ?
                new ObjectParameter("pPharmacyName", pPharmacyName) :
                new ObjectParameter("pPharmacyName", typeof(string));
    
            var pAccountNoParameter = pAccountNo != null ?
                new ObjectParameter("pAccountNo", pAccountNo) :
                new ObjectParameter("pAccountNo", typeof(string));
    
            var pGenericParameter = pGeneric.HasValue ?
                new ObjectParameter("pGeneric", pGeneric) :
                new ObjectParameter("pGeneric", typeof(decimal));
    
            var pEthicalPIParameter = pEthicalPI.HasValue ?
                new ObjectParameter("pEthicalPI", pEthicalPI) :
                new ObjectParameter("pEthicalPI", typeof(decimal));
    
            var pSurgicalDressingParameter = pSurgicalDressing.HasValue ?
                new ObjectParameter("pSurgicalDressing", pSurgicalDressing) :
                new ObjectParameter("pSurgicalDressing", typeof(decimal));
    
            var pNonGenericParameter = pNonGeneric.HasValue ?
                new ObjectParameter("pNonGeneric", pNonGeneric) :
                new ObjectParameter("pNonGeneric", typeof(decimal));
    
            var pNonPrescriptionParameter = pNonPrescription.HasValue ?
                new ObjectParameter("pNonPrescription", pNonPrescription) :
                new ObjectParameter("pNonPrescription", typeof(decimal));
    
            var pInsulinParameter = pInsulin.HasValue ?
                new ObjectParameter("pInsulin", pInsulin) :
                new ObjectParameter("pInsulin", typeof(decimal));
    
            var pStatusParameter = pStatus.HasValue ?
                new ObjectParameter("pStatus", pStatus) :
                new ObjectParameter("pStatus", typeof(decimal));
    
            var pElectricalParameter = pElectrical.HasValue ?
                new ObjectParameter("pElectrical", pElectrical) :
                new ObjectParameter("pElectrical", typeof(decimal));
    
            var pDrinksParameter = pDrinks.HasValue ?
                new ObjectParameter("pDrinks", pDrinks) :
                new ObjectParameter("pDrinks", typeof(decimal));
    
            var pNonDiscountParameter = pNonDiscount.HasValue ?
                new ObjectParameter("pNonDiscount", pNonDiscount) :
                new ObjectParameter("pNonDiscount", typeof(decimal));
    
            var pOTCParameter = pOTC.HasValue ?
                new ObjectParameter("pOTC", pOTC) :
                new ObjectParameter("pOTC", typeof(decimal));
    
            var pMobilityParameter = pMobility.HasValue ?
                new ObjectParameter("pMobility", pMobility) :
                new ObjectParameter("pMobility", typeof(decimal));
    
            var pSpecialsParameter = pSpecials.HasValue ?
                new ObjectParameter("pSpecials", pSpecials) :
                new ObjectParameter("pSpecials", typeof(decimal));
    
            var pNP8Parameter = pNP8.HasValue ?
                new ObjectParameter("pNP8", pNP8) :
                new ObjectParameter("pNP8", typeof(decimal));
    
            var pOther1Parameter = pOther1.HasValue ?
                new ObjectParameter("pOther1", pOther1) :
                new ObjectParameter("pOther1", typeof(decimal));
    
            var pOther2Parameter = pOther2.HasValue ?
                new ObjectParameter("pOther2", pOther2) :
                new ObjectParameter("pOther2", typeof(decimal));
    
            var pOther3Parameter = pOther3.HasValue ?
                new ObjectParameter("pOther3", pOther3) :
                new ObjectParameter("pOther3", typeof(decimal));
    
            var pTotalSpendParameter = pTotalSpend.HasValue ?
                new ObjectParameter("pTotalSpend", pTotalSpend) :
                new ObjectParameter("pTotalSpend", typeof(decimal));
    
            var pTotalRebateParameter = pTotalRebate.HasValue ?
                new ObjectParameter("pTotalRebate", pTotalRebate) :
                new ObjectParameter("pTotalRebate", typeof(decimal));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_ImportData_Save", pDataYearParameter, pDataMonthParameter, pPharmacyNameParameter, pAccountNoParameter, pGenericParameter, pEthicalPIParameter, pSurgicalDressingParameter, pNonGenericParameter, pNonPrescriptionParameter, pInsulinParameter, pStatusParameter, pElectricalParameter, pDrinksParameter, pNonDiscountParameter, pOTCParameter, pMobilityParameter, pSpecialsParameter, pNP8Parameter, pOther1Parameter, pOther2Parameter, pOther3Parameter, pTotalSpendParameter, pTotalRebateParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<sp_ImportData_SelectWhere_Result> sp_ImportData_SelectWhere(string dfltWhere)
        {
            var dfltWhereParameter = dfltWhere != null ?
                new ObjectParameter("dfltWhere", dfltWhere) :
                new ObjectParameter("dfltWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ImportData_SelectWhere_Result>("sp_ImportData_SelectWhere", dfltWhereParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_ProcessData_Save(string pDataYear, string pDataMonth, Nullable<int> pUser, string pTerminal)
        {
            var pDataYearParameter = pDataYear != null ?
                new ObjectParameter("pDataYear", pDataYear) :
                new ObjectParameter("pDataYear", typeof(string));
    
            var pDataMonthParameter = pDataMonth != null ?
                new ObjectParameter("pDataMonth", pDataMonth) :
                new ObjectParameter("pDataMonth", typeof(string));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_ProcessData_Save", pDataYearParameter, pDataMonthParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<sp_ProcessData_SelectCondition_Result> sp_ProcessData_SelectCondition(string dfltWhere)
        {
            var dfltWhereParameter = dfltWhere != null ?
                new ObjectParameter("dfltWhere", dfltWhere) :
                new ObjectParameter("dfltWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProcessData_SelectCondition_Result>("sp_ProcessData_SelectCondition", dfltWhereParameter);
        }
    
        public virtual int sp_ProcessData_SelectWhere(Nullable<System.DateTime> pStartDate, Nullable<System.DateTime> pEndDate, Nullable<int> pMemberType, string pSupplierIdList, string pPharmacyIdList, string pDurationType, string pRptType)
        {
            var pStartDateParameter = pStartDate.HasValue ?
                new ObjectParameter("pStartDate", pStartDate) :
                new ObjectParameter("pStartDate", typeof(System.DateTime));
    
            var pEndDateParameter = pEndDate.HasValue ?
                new ObjectParameter("pEndDate", pEndDate) :
                new ObjectParameter("pEndDate", typeof(System.DateTime));
    
            var pMemberTypeParameter = pMemberType.HasValue ?
                new ObjectParameter("pMemberType", pMemberType) :
                new ObjectParameter("pMemberType", typeof(int));
    
            var pSupplierIdListParameter = pSupplierIdList != null ?
                new ObjectParameter("pSupplierIdList", pSupplierIdList) :
                new ObjectParameter("pSupplierIdList", typeof(string));
    
            var pPharmacyIdListParameter = pPharmacyIdList != null ?
                new ObjectParameter("pPharmacyIdList", pPharmacyIdList) :
                new ObjectParameter("pPharmacyIdList", typeof(string));
    
            var pDurationTypeParameter = pDurationType != null ?
                new ObjectParameter("pDurationType", pDurationType) :
                new ObjectParameter("pDurationType", typeof(string));
    
            var pRptTypeParameter = pRptType != null ?
                new ObjectParameter("pRptType", pRptType) :
                new ObjectParameter("pRptType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProcessData_SelectWhere", pStartDateParameter, pEndDateParameter, pMemberTypeParameter, pSupplierIdListParameter, pPharmacyIdListParameter, pDurationTypeParameter, pRptTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_ImportData_Delete(string pDataYear, string pDataMonth)
        {
            var pDataYearParameter = pDataYear != null ?
                new ObjectParameter("pDataYear", pDataYear) :
                new ObjectParameter("pDataYear", typeof(string));
    
            var pDataMonthParameter = pDataMonth != null ?
                new ObjectParameter("pDataMonth", pDataMonth) :
                new ObjectParameter("pDataMonth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_ImportData_Delete", pDataYearParameter, pDataMonthParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_ProcessData_Delete(string pDataYear, string pDataMonth)
        {
            var pDataYearParameter = pDataYear != null ?
                new ObjectParameter("pDataYear", pDataYear) :
                new ObjectParameter("pDataYear", typeof(string));
    
            var pDataMonthParameter = pDataMonth != null ?
                new ObjectParameter("pDataMonth", pDataMonth) :
                new ObjectParameter("pDataMonth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_ProcessData_Delete", pDataYearParameter, pDataMonthParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_PharmacyMaster_Save(Nullable<int> pPharmacyID, string pPharmacyName, string pCompanyName, string pAddress1, string pAddress2, string pCity, string pPostCode, string pRespPerson, string pTelephone, string pFaxNo, string pEmailID, string pDCRegNo, string pPharmacoRegNo, Nullable<bool> pIsActive, Nullable<int> pUser, string pTerminal)
        {
            var pPharmacyIDParameter = pPharmacyID.HasValue ?
                new ObjectParameter("pPharmacyID", pPharmacyID) :
                new ObjectParameter("pPharmacyID", typeof(int));
    
            var pPharmacyNameParameter = pPharmacyName != null ?
                new ObjectParameter("pPharmacyName", pPharmacyName) :
                new ObjectParameter("pPharmacyName", typeof(string));
    
            var pCompanyNameParameter = pCompanyName != null ?
                new ObjectParameter("pCompanyName", pCompanyName) :
                new ObjectParameter("pCompanyName", typeof(string));
    
            var pAddress1Parameter = pAddress1 != null ?
                new ObjectParameter("pAddress1", pAddress1) :
                new ObjectParameter("pAddress1", typeof(string));
    
            var pAddress2Parameter = pAddress2 != null ?
                new ObjectParameter("pAddress2", pAddress2) :
                new ObjectParameter("pAddress2", typeof(string));
    
            var pCityParameter = pCity != null ?
                new ObjectParameter("pCity", pCity) :
                new ObjectParameter("pCity", typeof(string));
    
            var pPostCodeParameter = pPostCode != null ?
                new ObjectParameter("pPostCode", pPostCode) :
                new ObjectParameter("pPostCode", typeof(string));
    
            var pRespPersonParameter = pRespPerson != null ?
                new ObjectParameter("pRespPerson", pRespPerson) :
                new ObjectParameter("pRespPerson", typeof(string));
    
            var pTelephoneParameter = pTelephone != null ?
                new ObjectParameter("pTelephone", pTelephone) :
                new ObjectParameter("pTelephone", typeof(string));
    
            var pFaxNoParameter = pFaxNo != null ?
                new ObjectParameter("pFaxNo", pFaxNo) :
                new ObjectParameter("pFaxNo", typeof(string));
    
            var pEmailIDParameter = pEmailID != null ?
                new ObjectParameter("pEmailID", pEmailID) :
                new ObjectParameter("pEmailID", typeof(string));
    
            var pDCRegNoParameter = pDCRegNo != null ?
                new ObjectParameter("pDCRegNo", pDCRegNo) :
                new ObjectParameter("pDCRegNo", typeof(string));
    
            var pPharmacoRegNoParameter = pPharmacoRegNo != null ?
                new ObjectParameter("pPharmacoRegNo", pPharmacoRegNo) :
                new ObjectParameter("pPharmacoRegNo", typeof(string));
    
            var pIsActiveParameter = pIsActive.HasValue ?
                new ObjectParameter("pIsActive", pIsActive) :
                new ObjectParameter("pIsActive", typeof(bool));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_PharmacyMaster_Save", pPharmacyIDParameter, pPharmacyNameParameter, pCompanyNameParameter, pAddress1Parameter, pAddress2Parameter, pCityParameter, pPostCodeParameter, pRespPersonParameter, pTelephoneParameter, pFaxNoParameter, pEmailIDParameter, pDCRegNoParameter, pPharmacoRegNoParameter, pIsActiveParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<sp_CustSuppAssociation_SelectWhere_Result> sp_CustSuppAssociation_SelectWhere(string pdefWhere)
        {
            var pdefWhereParameter = pdefWhere != null ?
                new ObjectParameter("pdefWhere", pdefWhere) :
                new ObjectParameter("pdefWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CustSuppAssociation_SelectWhere_Result>("sp_CustSuppAssociation_SelectWhere", pdefWhereParameter);
        }
    
        public virtual ObjectResult<sp_ProcessData_MonthlyForAllSupp_Result> sp_ProcessData_MonthlyForAllSupp(Nullable<System.DateTime> pStartDate, Nullable<System.DateTime> pEndDate, Nullable<int> pMemberType)
        {
            var pStartDateParameter = pStartDate.HasValue ?
                new ObjectParameter("pStartDate", pStartDate) :
                new ObjectParameter("pStartDate", typeof(System.DateTime));
    
            var pEndDateParameter = pEndDate.HasValue ?
                new ObjectParameter("pEndDate", pEndDate) :
                new ObjectParameter("pEndDate", typeof(System.DateTime));
    
            var pMemberTypeParameter = pMemberType.HasValue ?
                new ObjectParameter("pMemberType", pMemberType) :
                new ObjectParameter("pMemberType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProcessData_MonthlyForAllSupp_Result>("sp_ProcessData_MonthlyForAllSupp", pStartDateParameter, pEndDateParameter, pMemberTypeParameter);
        }
    
        public virtual ObjectResult<sp_ProcessData_PharmacyMonthlyPurchase_Result> sp_ProcessData_PharmacyMonthlyPurchase(Nullable<System.DateTime> pStartDate, Nullable<System.DateTime> pEndDate, string pMonthFilterType, Nullable<int> pPharmacyId)
        {
            var pStartDateParameter = pStartDate.HasValue ?
                new ObjectParameter("pStartDate", pStartDate) :
                new ObjectParameter("pStartDate", typeof(System.DateTime));
    
            var pEndDateParameter = pEndDate.HasValue ?
                new ObjectParameter("pEndDate", pEndDate) :
                new ObjectParameter("pEndDate", typeof(System.DateTime));
    
            var pMonthFilterTypeParameter = pMonthFilterType != null ?
                new ObjectParameter("pMonthFilterType", pMonthFilterType) :
                new ObjectParameter("pMonthFilterType", typeof(string));
    
            var pPharmacyIdParameter = pPharmacyId.HasValue ?
                new ObjectParameter("pPharmacyId", pPharmacyId) :
                new ObjectParameter("pPharmacyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProcessData_PharmacyMonthlyPurchase_Result>("sp_ProcessData_PharmacyMonthlyPurchase", pStartDateParameter, pEndDateParameter, pMonthFilterTypeParameter, pPharmacyIdParameter);
        }
    
        public virtual ObjectResult<sp_ProcessData_PharmacyProcessData_Result> sp_ProcessData_PharmacyProcessData(Nullable<System.DateTime> pStartDate, Nullable<System.DateTime> pEndDate, Nullable<int> pPharmacyId)
        {
            var pStartDateParameter = pStartDate.HasValue ?
                new ObjectParameter("pStartDate", pStartDate) :
                new ObjectParameter("pStartDate", typeof(System.DateTime));
    
            var pEndDateParameter = pEndDate.HasValue ?
                new ObjectParameter("pEndDate", pEndDate) :
                new ObjectParameter("pEndDate", typeof(System.DateTime));
    
            var pPharmacyIdParameter = pPharmacyId.HasValue ?
                new ObjectParameter("pPharmacyId", pPharmacyId) :
                new ObjectParameter("pPharmacyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProcessData_PharmacyProcessData_Result>("sp_ProcessData_PharmacyProcessData", pStartDateParameter, pEndDateParameter, pPharmacyIdParameter);
        }
    
        public virtual ObjectResult<sp_ProcessData_PharmacyPurchaseBaseOnSupplier_Result> sp_ProcessData_PharmacyPurchaseBaseOnSupplier(Nullable<System.DateTime> pStartDate, Nullable<System.DateTime> pEndDate, Nullable<int> pMemberType, string pSupplierIdList)
        {
            var pStartDateParameter = pStartDate.HasValue ?
                new ObjectParameter("pStartDate", pStartDate) :
                new ObjectParameter("pStartDate", typeof(System.DateTime));
    
            var pEndDateParameter = pEndDate.HasValue ?
                new ObjectParameter("pEndDate", pEndDate) :
                new ObjectParameter("pEndDate", typeof(System.DateTime));
    
            var pMemberTypeParameter = pMemberType.HasValue ?
                new ObjectParameter("pMemberType", pMemberType) :
                new ObjectParameter("pMemberType", typeof(int));
    
            var pSupplierIdListParameter = pSupplierIdList != null ?
                new ObjectParameter("pSupplierIdList", pSupplierIdList) :
                new ObjectParameter("pSupplierIdList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProcessData_PharmacyPurchaseBaseOnSupplier_Result>("sp_ProcessData_PharmacyPurchaseBaseOnSupplier", pStartDateParameter, pEndDateParameter, pMemberTypeParameter, pSupplierIdListParameter);
        }
    
        public virtual ObjectResult<sp_ProcessData_PharmacyPurchaseComparison_Result> sp_ProcessData_PharmacyPurchaseComparison(Nullable<System.DateTime> pStartDate, Nullable<System.DateTime> pEndDate, string pMonthFilterType, Nullable<int> pPharmacyId)
        {
            var pStartDateParameter = pStartDate.HasValue ?
                new ObjectParameter("pStartDate", pStartDate) :
                new ObjectParameter("pStartDate", typeof(System.DateTime));
    
            var pEndDateParameter = pEndDate.HasValue ?
                new ObjectParameter("pEndDate", pEndDate) :
                new ObjectParameter("pEndDate", typeof(System.DateTime));
    
            var pMonthFilterTypeParameter = pMonthFilterType != null ?
                new ObjectParameter("pMonthFilterType", pMonthFilterType) :
                new ObjectParameter("pMonthFilterType", typeof(string));
    
            var pPharmacyIdParameter = pPharmacyId.HasValue ?
                new ObjectParameter("pPharmacyId", pPharmacyId) :
                new ObjectParameter("pPharmacyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProcessData_PharmacyPurchaseComparison_Result>("sp_ProcessData_PharmacyPurchaseComparison", pStartDateParameter, pEndDateParameter, pMonthFilterTypeParameter, pPharmacyIdParameter);
        }
    
        public virtual ObjectResult<sp_ProcessData_PharmacyWise_Result> sp_ProcessData_PharmacyWise(Nullable<System.DateTime> pStartDate, Nullable<System.DateTime> pEndDate, Nullable<int> pMemberType)
        {
            var pStartDateParameter = pStartDate.HasValue ?
                new ObjectParameter("pStartDate", pStartDate) :
                new ObjectParameter("pStartDate", typeof(System.DateTime));
    
            var pEndDateParameter = pEndDate.HasValue ?
                new ObjectParameter("pEndDate", pEndDate) :
                new ObjectParameter("pEndDate", typeof(System.DateTime));
    
            var pMemberTypeParameter = pMemberType.HasValue ?
                new ObjectParameter("pMemberType", pMemberType) :
                new ObjectParameter("pMemberType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProcessData_PharmacyWise_Result>("sp_ProcessData_PharmacyWise", pStartDateParameter, pEndDateParameter, pMemberTypeParameter);
        }
    
        public virtual int sp_ProcessData_PharmacyWiseYearlyComparition(string pYearList, Nullable<int> pMemberType, string pSupplierIdList, string pPharmacyIdList, string pDurationType, string pDurationNo)
        {
            var pYearListParameter = pYearList != null ?
                new ObjectParameter("pYearList", pYearList) :
                new ObjectParameter("pYearList", typeof(string));
    
            var pMemberTypeParameter = pMemberType.HasValue ?
                new ObjectParameter("pMemberType", pMemberType) :
                new ObjectParameter("pMemberType", typeof(int));
    
            var pSupplierIdListParameter = pSupplierIdList != null ?
                new ObjectParameter("pSupplierIdList", pSupplierIdList) :
                new ObjectParameter("pSupplierIdList", typeof(string));
    
            var pPharmacyIdListParameter = pPharmacyIdList != null ?
                new ObjectParameter("pPharmacyIdList", pPharmacyIdList) :
                new ObjectParameter("pPharmacyIdList", typeof(string));
    
            var pDurationTypeParameter = pDurationType != null ?
                new ObjectParameter("pDurationType", pDurationType) :
                new ObjectParameter("pDurationType", typeof(string));
    
            var pDurationNoParameter = pDurationNo != null ?
                new ObjectParameter("pDurationNo", pDurationNo) :
                new ObjectParameter("pDurationNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProcessData_PharmacyWiseYearlyComparition", pYearListParameter, pMemberTypeParameter, pSupplierIdListParameter, pPharmacyIdListParameter, pDurationTypeParameter, pDurationNoParameter);
        }
    
        public virtual ObjectResult<sp_ProcessData_SelectedSupplierMonthlySales_Result> sp_ProcessData_SelectedSupplierMonthlySales(Nullable<System.DateTime> pStartDate, Nullable<System.DateTime> pEndDate, Nullable<int> pMemberType, string pMonthFilterType, string pSupplierIdList)
        {
            var pStartDateParameter = pStartDate.HasValue ?
                new ObjectParameter("pStartDate", pStartDate) :
                new ObjectParameter("pStartDate", typeof(System.DateTime));
    
            var pEndDateParameter = pEndDate.HasValue ?
                new ObjectParameter("pEndDate", pEndDate) :
                new ObjectParameter("pEndDate", typeof(System.DateTime));
    
            var pMemberTypeParameter = pMemberType.HasValue ?
                new ObjectParameter("pMemberType", pMemberType) :
                new ObjectParameter("pMemberType", typeof(int));
    
            var pMonthFilterTypeParameter = pMonthFilterType != null ?
                new ObjectParameter("pMonthFilterType", pMonthFilterType) :
                new ObjectParameter("pMonthFilterType", typeof(string));
    
            var pSupplierIdListParameter = pSupplierIdList != null ?
                new ObjectParameter("pSupplierIdList", pSupplierIdList) :
                new ObjectParameter("pSupplierIdList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProcessData_SelectedSupplierMonthlySales_Result>("sp_ProcessData_SelectedSupplierMonthlySales", pStartDateParameter, pEndDateParameter, pMemberTypeParameter, pMonthFilterTypeParameter, pSupplierIdListParameter);
        }
    
        public virtual ObjectResult<sp_ProcessData_SupplierMonthlySales_Result> sp_ProcessData_SupplierMonthlySales(Nullable<System.DateTime> pStartDate, Nullable<System.DateTime> pEndDate, Nullable<int> pMemberType, string pMonthFilterType, string pSupplierIdList)
        {
            var pStartDateParameter = pStartDate.HasValue ?
                new ObjectParameter("pStartDate", pStartDate) :
                new ObjectParameter("pStartDate", typeof(System.DateTime));
    
            var pEndDateParameter = pEndDate.HasValue ?
                new ObjectParameter("pEndDate", pEndDate) :
                new ObjectParameter("pEndDate", typeof(System.DateTime));
    
            var pMemberTypeParameter = pMemberType.HasValue ?
                new ObjectParameter("pMemberType", pMemberType) :
                new ObjectParameter("pMemberType", typeof(int));
    
            var pMonthFilterTypeParameter = pMonthFilterType != null ?
                new ObjectParameter("pMonthFilterType", pMonthFilterType) :
                new ObjectParameter("pMonthFilterType", typeof(string));
    
            var pSupplierIdListParameter = pSupplierIdList != null ?
                new ObjectParameter("pSupplierIdList", pSupplierIdList) :
                new ObjectParameter("pSupplierIdList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProcessData_SupplierMonthlySales_Result>("sp_ProcessData_SupplierMonthlySales", pStartDateParameter, pEndDateParameter, pMemberTypeParameter, pMonthFilterTypeParameter, pSupplierIdListParameter);
        }
    
        public virtual ObjectResult<sp_ProcessData_SupplierProcessData_Result> sp_ProcessData_SupplierProcessData(Nullable<System.DateTime> pStartDate, Nullable<System.DateTime> pEndDate, Nullable<int> pMemberType, string pSupplierIdList)
        {
            var pStartDateParameter = pStartDate.HasValue ?
                new ObjectParameter("pStartDate", pStartDate) :
                new ObjectParameter("pStartDate", typeof(System.DateTime));
    
            var pEndDateParameter = pEndDate.HasValue ?
                new ObjectParameter("pEndDate", pEndDate) :
                new ObjectParameter("pEndDate", typeof(System.DateTime));
    
            var pMemberTypeParameter = pMemberType.HasValue ?
                new ObjectParameter("pMemberType", pMemberType) :
                new ObjectParameter("pMemberType", typeof(int));
    
            var pSupplierIdListParameter = pSupplierIdList != null ?
                new ObjectParameter("pSupplierIdList", pSupplierIdList) :
                new ObjectParameter("pSupplierIdList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProcessData_SupplierProcessData_Result>("sp_ProcessData_SupplierProcessData", pStartDateParameter, pEndDateParameter, pMemberTypeParameter, pSupplierIdListParameter);
        }
    
        public virtual ObjectResult<sp_ProcessData_SupplierSalesBaseOnPharmacy_Result> sp_ProcessData_SupplierSalesBaseOnPharmacy(Nullable<System.DateTime> pStartDate, Nullable<System.DateTime> pEndDate, Nullable<int> pPharmacyId)
        {
            var pStartDateParameter = pStartDate.HasValue ?
                new ObjectParameter("pStartDate", pStartDate) :
                new ObjectParameter("pStartDate", typeof(System.DateTime));
    
            var pEndDateParameter = pEndDate.HasValue ?
                new ObjectParameter("pEndDate", pEndDate) :
                new ObjectParameter("pEndDate", typeof(System.DateTime));
    
            var pPharmacyIdParameter = pPharmacyId.HasValue ?
                new ObjectParameter("pPharmacyId", pPharmacyId) :
                new ObjectParameter("pPharmacyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProcessData_SupplierSalesBaseOnPharmacy_Result>("sp_ProcessData_SupplierSalesBaseOnPharmacy", pStartDateParameter, pEndDateParameter, pPharmacyIdParameter);
        }
    
        public virtual ObjectResult<sp_ProcessData_SupplierSalesComparison_Result> sp_ProcessData_SupplierSalesComparison(Nullable<System.DateTime> pStartDate, Nullable<System.DateTime> pEndDate, Nullable<int> pMemberType, string pMonthFilterType, string pSupplierIdList)
        {
            var pStartDateParameter = pStartDate.HasValue ?
                new ObjectParameter("pStartDate", pStartDate) :
                new ObjectParameter("pStartDate", typeof(System.DateTime));
    
            var pEndDateParameter = pEndDate.HasValue ?
                new ObjectParameter("pEndDate", pEndDate) :
                new ObjectParameter("pEndDate", typeof(System.DateTime));
    
            var pMemberTypeParameter = pMemberType.HasValue ?
                new ObjectParameter("pMemberType", pMemberType) :
                new ObjectParameter("pMemberType", typeof(int));
    
            var pMonthFilterTypeParameter = pMonthFilterType != null ?
                new ObjectParameter("pMonthFilterType", pMonthFilterType) :
                new ObjectParameter("pMonthFilterType", typeof(string));
    
            var pSupplierIdListParameter = pSupplierIdList != null ?
                new ObjectParameter("pSupplierIdList", pSupplierIdList) :
                new ObjectParameter("pSupplierIdList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProcessData_SupplierSalesComparison_Result>("sp_ProcessData_SupplierSalesComparison", pStartDateParameter, pEndDateParameter, pMemberTypeParameter, pMonthFilterTypeParameter, pSupplierIdListParameter);
        }
    
        public virtual ObjectResult<sp_ProcessData_SupplierWise_Result> sp_ProcessData_SupplierWise(Nullable<System.DateTime> pStartDate, Nullable<System.DateTime> pEndDate, Nullable<int> pMemberType)
        {
            var pStartDateParameter = pStartDate.HasValue ?
                new ObjectParameter("pStartDate", pStartDate) :
                new ObjectParameter("pStartDate", typeof(System.DateTime));
    
            var pEndDateParameter = pEndDate.HasValue ?
                new ObjectParameter("pEndDate", pEndDate) :
                new ObjectParameter("pEndDate", typeof(System.DateTime));
    
            var pMemberTypeParameter = pMemberType.HasValue ?
                new ObjectParameter("pMemberType", pMemberType) :
                new ObjectParameter("pMemberType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProcessData_SupplierWise_Result>("sp_ProcessData_SupplierWise", pStartDateParameter, pEndDateParameter, pMemberTypeParameter);
        }
    }
}
