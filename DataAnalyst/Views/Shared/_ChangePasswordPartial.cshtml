@model DataAnalyst.Models.ManageUserViewModel

@using (Ajax.BeginForm("Manage", "Base", new AjaxOptions { HttpMethod = "POST", OnBegin = "BeginFun", OnSuccess = "SuccessFun" , OnFailure = "FailureFun" }, new { @class = "", id = "frmcgangepwd" }))
{
    <div id="divChangePassword" class="modal extended-modal fade no-display" tabindex="-1" data-width="800" data-height="400" style="z-index: 2000 !important">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header bg-light-blue">

                    <button type="button" class="close" id="btnClose" data-dismiss="modal" aria-hidden="true">
                        &times;

                    </button>
                    <h4 class="modal-title">Change Password</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12">

                            @Html.AntiForgeryToken()

                            @*@Html.HiddenFor(Model => Model.UserId)
                            @Html.HiddenFor(Model => Model.RefRoleId)
                            @Html.HiddenFor(Model => Model.UserName)*@
                            
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label>Old Password</label>
                                    @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
                                </div>
                            </div>

                            <div class="col-md-12">
                                <div class="form-group">
                                    <label>New Password</label>
                                    @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
                                    <small>Password must be  <b>minimum 6 digit</b> long</small>
                                </div>
                            </div>

                            <div class="col-md-12">
                                <div class="form-group">
                                    <label>Confirm Password</label>
                                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-10">
                                    <input id="btnRegister" type="submit" name="btnRegister" class="btn btn-primary" value="Change" onclick="return ValidationCP();" />
                                    @*onclick="return Validation();"*@
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>

    </div>
}

<script type="text/javascript">
    $(document).ready(function () {

        $(".select2").select2();

    });

    function ValidationCP() {
        //debugger;

        var _OldPassword = $("#OldPassword").val();
        if (_OldPassword == '' || _OldPassword == undefined) {
            toastr["warning"]('Old Password can not left blank!');
            $("#OldPassword").focus();
            return false;
        }

        var _Password = $("#NewPassword").val();
        if (_Password == '' || _Password == undefined) {
            toastr["warning"]('New Password can not left blank!');
            $("#NewPassword").focus();
            return false;
        }
        if (_Password.length < 6) {
            toastr["warning"]('Password must be greater than 6 digit!');
            $("#NewPassword").focus();
            return false;
        }

        var _ConfPassword = $("#ConfirmPassword").val();
        if (_ConfPassword == '' || _ConfPassword == undefined) {
            toastr["warning"]('Confirm Password can not left blank!');
            $("#ConfirmPassword").focus();
            return false;
        }

        if (_ConfPassword != _Password) {
            toastr["warning"]('Confirm password does not match with new password!');
            $("#NewPassword").val('');
            $("#ConfirmPassword").val('');
            $("#NewPassword").focus();
            return false;
        }
        return true;
    }

    function BeginFun() {

    }

    function SuccessFun(response) {
        if (response.Result)
            window.location.href = "/Account/Login";
        else
        {
            $("#OldPassword").val("");
            $("#OldPassword").focus();
            toastr["warning"](response.Message);
        }
    }

    function FailureFun(ex, th, st) {
        debugger;
        toastr["error"](th);
    }


</script>
<style type="text/css">
    .select2-dropdown {
        z-index: 2001 !important;
    }
</style>
